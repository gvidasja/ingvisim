CoolNums {
    // just a basic integer
    Expr =  FunDef | WhileExpr | IfExpr | Block | Assign | MathOp | Group | identifier | Number | String

    MathOp = Or | Mul | Div | Add | Sub | Eq | Neq | Lt | Lte | Gt | Gte | Term
    Or = Expr "||" Expr
    Add = Expr "+"  Term
    Sub = Expr "-"  Term
    Mul = Expr "*"  Term
    Div = Expr "/"  Term
    Eq  = Expr "==" Expr
    Neq = Expr "!=" Expr
    Lt  = Expr "<"  Expr
    Lte = Expr "<=" Expr
    Gt  = Expr ">"  Expr
    Gte = Expr ">=" Expr


    Term = Group | FunCall | identifier | Number | String | ArrayLiteral

    Assign = identifier "=" Expr
    identifier = letter (letter|digit)*

    Group = "(" Expr ")"
    Block = "{" Expr* "}"

    IfExpr    = "if" Block Block ("else" Block)?
    WhileExpr = "while" Block Block

//    MyArray = "[" ListOf<Expr, ","> "]"

    ArrayLiteral = "[" ListOf<Expr, ","> "]"
    ArrayElement = (identifier | ArrayLiteral) "[" Term "]"

    FunCall = identifier "(" Arguments ")"
    Arguments = ListOf<Expr, ",">

    

    FunDef  = "fun" identifier "(" Parameters ")" Block
    Parameters = ListOf<identifier, ",">

    qq = "\""
    String = qq (~qq any)+ qq

    Number = oct | hex | float | int
    int    = digit+
    float  = digit+ "." digit+ exp?
    exp    = "e" "-"? digit+
    hex    = "0x" hexDigit+
    oct    = "0o" octDigit+
    octDigit = "0".."7"
    //hexDigit := "0".."9" | "a".."f" | "A".."F" //already defined by Ohm

    // override space to include slash slash comments
    // real version needs to support various unicode whitespace forms
    space := "\t" | " " | "\n" | "\r\n" | comment
    comment = "//" (~"\n" any)*
}
